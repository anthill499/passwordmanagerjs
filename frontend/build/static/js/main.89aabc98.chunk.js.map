{"version":3,"sources":["components/landing/Landing.js","context/Contexts.js","components/auth/Signup.js","components/auth/Signin.js","components/Heading/Heading.js","util/passwordGenerator.js","components/dashboard/newCred.js","components/dashboard/Dashboard.js","util/RouteUtil.js","store/actions/types.js","store/reducers/authReducer.js","App.js","store/actions/AuthActions.js","index.js"],"names":["Landing","navigate","useNavigate","className","onClick","replace","AuthContext","React","createContext","Signup","useState","username","setusername","password","setpassword","backendErrors","setbackendErrors","authGlobal","useContext","handleSignup","e","a","url","data","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","response","json","parseResp","ok","login","localStorage","setItem","console","error","errors","global","htmlFor","style","color","name","value","onChange","currentTarget","placeholder","outlineColor","type","Signin","handleSignin","Heading","logout","ASCII","genWeakGood","count","answer","i","Math","floor","random","genStrong","passwordGenerator","CredentialForm","modalOpen","setmodalOpen","setCreds","creds","strength","setStrength","company","setcompany","clipMessage","setclipMessage","dictionary","10","20","30","40","strengthDictionary","rerollPassword","newPw","handleSubmit","userId","id","newPassword","companyName","concat","newCreds","log","src","alt","onSubmit","length","navigator","clipboard","writeText","setTimeout","readOnly","Dashboard","1","2","3","4","useEffect","message","fetchUserCreds","onKeyUp","key","handleModalKey","xmlns","x","y","width","height","viewBox","fill","margin","fillRule","d","map","cred","company_name","pw","textAlign","removedStatus","removed","toString","fontSize","PrivateRoute","children","redirectTo","isLoggedIn","to","AuthRoute","LOGIN","LOGOUT","user","getItem","parse","initialState","token","AuthReducer","state","action","ACTION_TYPE","App","useReducer","stateAuthReducer","dispatchAuthReducer","Provider","removeItem","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89aabc98.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../styles/landing.css\";\nimport { useNavigate } from \"react-router\";\n\nconst Landing = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"Landing-Container\">\n      <h1>Hello, welcome to PasswordManager</h1>\n      <button onClick={() => navigate(\"/signin\", { replace: false })}>\n        Let's get started\n      </button>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\n\n// Authorization Context\nexport const AuthContext = React.createContext();\n","import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { AuthContext } from \"../../context/Contexts\";\nimport \"../../styles/auth.css\";\nimport \"../../styles/global.css\";\n// Sign up form\nconst Signup = () => {\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [backendErrors, setbackendErrors] = useState(null);\n\n  const navigate = useNavigate();\n\n  // Context\n  const authGlobal = useContext(AuthContext);\n  const handleSignup = async (\n    e,\n    url = \"/api/auth/signup\",\n    data = { username: username, password: password }\n  ) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(url, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n      const parseResp = await response.json();\n      if (response.ok) {\n        authGlobal.login(parseResp);\n        localStorage.setItem(\"user\", JSON.stringify(parseResp));\n      } else {\n        setbackendErrors(parseResp);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"Auth-Form\">\n      <h4>\n        {!backendErrors?.errors?.global\n          ? \"Get started today!\"\n          : backendErrors?.errors?.global}{\" \"}\n      </h4>\n      <form>\n        <label\n          htmlFor=\"username\"\n          style={{\n            color: backendErrors?.errors?.username ? \"red\" : null,\n          }}\n        >\n          {!backendErrors?.errors?.username\n            ? \"Enter a Username\"\n            : backendErrors?.errors?.username}\n        </label>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={(e) => setusername(e.currentTarget.value)}\n          placeholder=\"Enter a username\"\n          style={{\n            outlineColor: backendErrors?.errors?.username ? \"red\" : null,\n          }}\n          className={backendErrors?.errors?.username ? \"Auth-Input\" : null}\n        />\n\n        <label\n          htmlFor=\"password\"\n          style={{\n            color: backendErrors?.errors?.password ? \"red\" : null,\n          }}\n        >\n          {\" \"}\n          {!backendErrors?.errors?.password\n            ? \"Enter a Password\"\n            : backendErrors?.errors?.password}\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setpassword(e.currentTarget.value)}\n          placeholder=\"Enter a strong password\"\n          style={{\n            outlineColor: backendErrors?.errors?.password ? \"red\" : null,\n          }}\n          className={backendErrors?.errors?.password ? \"Auth-Input\" : null}\n        />\n\n        <div className=\"Auth-Button-Group\">\n          <button onClick={(e) => handleSignup(e)}>Create Account</button>\n          <button onClick={() => navigate(\"/signin\", { replace: true })}>\n            Already have an account?\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../context/Contexts\";\nimport { useNavigate } from \"react-router\";\nimport \"../../styles/global.css\";\nimport \"../../styles/auth.css\";\n\nconst Signin = () => {\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [backendErrors, setbackendErrors] = useState([]);\n  const authGlobal = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleSignin = async (\n    e,\n    data = { username: username, password: password }\n  ) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/api/auth/signin\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      const parseResp = await response.json();\n      if (response.ok) {\n        authGlobal.login(parseResp);\n        localStorage.setItem(\"user\", JSON.stringify(parseResp));\n      } else {\n        setbackendErrors(parseResp);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"Auth-Form\">\n      <h4>\n        {!backendErrors?.errors?.global\n          ? \"Sign in to your account!\"\n          : backendErrors?.errors?.global}{\" \"}\n      </h4>\n      <form>\n        <label\n          htmlFor=\"username\"\n          style={{\n            color: backendErrors?.errors?.username ? \"red\" : null,\n          }}\n        >\n          {!backendErrors?.errors?.username\n            ? \"Enter a Username\"\n            : backendErrors?.errors?.username}\n        </label>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={(e) => setusername(e.currentTarget.value)}\n          placeholder=\"Enter your username\"\n          style={{\n            outlineColor: backendErrors?.errors?.username ? \"red\" : null,\n          }}\n          className={backendErrors?.errors?.username ? \"Auth-Input\" : null}\n        />\n        <label\n          htmlFor=\"password\"\n          style={{\n            color: backendErrors?.errors?.password ? \"red\" : null,\n          }}\n        >\n          {\" \"}\n          {!backendErrors?.errors?.password\n            ? \"Enter a Password\"\n            : backendErrors?.errors?.password}\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setpassword(e.currentTarget.value)}\n          placeholder=\"Enter your password\"\n          style={{\n            outlineColor: backendErrors?.errors?.password ? \"red\" : null,\n          }}\n          className={backendErrors?.errors?.password ? \"Auth-Input\" : null}\n        />\n        <div className=\"Auth-Button-Group\">\n          <button onClick={(e) => handleSignin(e)}>Sign In</button>\n          <button onClick={() => navigate(\"/signup\", { replace: true })}>\n            Don't have an account?\n          </button>\n          <button\n            onClick={(e) =>\n              handleSignin(e, {\n                username: \"newUser123\",\n                password: \"passwordQ!1\",\n              })\n            }\n          >\n            Demo User\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Signin;\n","import React, { useContext } from \"react\";\nimport \"../../styles/heading.css\";\nimport { AuthContext } from \"../../context/Contexts\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport TimelineIcon from \"@mui/icons-material/Timeline\";\n\nconst Heading = () => {\n  const authGlobal = useContext(AuthContext);\n  return (\n    <div className=\"Heading-Container\">\n      <div>🗝️PasswordManager</div>\n      <div className=\"Button-Group\">\n        <PersonIcon className=\"Heading-Button\" />\n        <TimelineIcon className=\"Heading-Button\" />\n        <LogoutIcon\n          onClick={() => authGlobal.logout()}\n          className=\"Heading-Button\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Heading;\n","// Count = 10, 20, 30,\nconst ASCII =\n  \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+,-./:;<=>?@[]^_`{|}~ \";\n// Length of ASCII = 93;\n\nconst passwordGenerator = (count) => {\n  return count <= 20 ? genWeakGood(count) : genStrong(count);\n};\n\nconst genWeakGood = (count) => {\n  let answer = \"\";\n  for (let i = 0; i < count; i++) {\n    answer += ASCII[Math.floor(Math.random() * 62)];\n  }\n  return answer;\n};\n\nconst genStrong = (count) => {\n  let answer = \"\";\n  for (let i = 0; i < count; i++) {\n    answer += ASCII[Math.floor(Math.random() * 93)];\n  }\n  return answer;\n};\n\nexport default passwordGenerator;\n","import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../context/Contexts\";\nimport passwordGenerator from \"../../util/passwordGenerator\";\n// import { useLocation } from \"react-router\";\nimport \"../../styles/dash.css\";\nimport \"../../styles/global.css\";\nimport \"../../styles/auth.css\";\n\nconst CredentialForm = ({ modalOpen, setmodalOpen, setCreds, creds }) => {\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [strength, setStrength] = useState(10);\n  const [company, setcompany] = useState(\"\");\n  const [clipMessage, setclipMessage] = useState(null);\n  const [backendErrors, setbackendErrors] = useState(null);\n  const authGlobal = useContext(AuthContext);\n\n  // const location = useLocation();\n  const dictionary = {\n    10: <span style={{ color: \"red\" }}>Weak</span>,\n    20: <span style={{ color: \"#ff7b00\" }}>Good</span>,\n    30: <span style={{ color: \"green\" }}>Strong</span>,\n    40: <span style={{ color: \"#1ac703\" }}>Very Strong</span>,\n  };\n\n  const strengthDictionary = {\n    10: 1,\n    20: 2,\n    30: 3,\n    40: 4,\n  };\n\n  const rerollPassword = (e, count) => {\n    e.preventDefault();\n    const newPw = passwordGenerator(count);\n    return setpassword(newPw);\n  };\n\n  // Clipboard message handler\n  const handleClipboard = () => {\n    navigator.clipboard.writeText(password);\n    setclipMessage(\n      <span className=\"Copied\">\n        <span> Copied to Clipboard!</span>\n      </span>\n    );\n    setTimeout(() => setclipMessage(null), 5000);\n  };\n\n  // Submit Form Handler, POST req\n  const handleSubmit = async (\n    e,\n    url = \"/api/cred/new\",\n    data = {\n      userId: authGlobal.id,\n      username: username,\n      newPassword: password,\n      companyName: company,\n      strength: strengthDictionary[strength],\n    }\n  ) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(url, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n      const parseResp = await response.json();\n      if (response.ok) {\n        const newCreds = await creds.concat(parseResp); // ParseResp is also an array\n        setCreds(newCreds);\n        setmodalOpen(!modalOpen);\n      } else {\n        setbackendErrors(parseResp);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"Credential-Form-Container\">\n      <img\n        src=\"https://img.icons8.com/color/48/000000/close-window.png\"\n        alt=\"close\"\n        className=\"close\"\n        onClick={() => setmodalOpen(!modalOpen)}\n      />\n      <h4 className=\"Credential-Header\">Create a new Credential</h4>\n      <form className=\"Credential-Form\" onSubmit={(e) => handleSubmit(e)}>\n        <label\n          htmlFor=\"company\"\n          style={{ color: backendErrors?.errors?.company ? \"red\" : null }}\n        >\n          {!backendErrors?.errors?.company\n            ? \"Company Name\"\n            : backendErrors?.errors?.company}\n        </label>\n        <input\n          name=\"company\"\n          value={company}\n          onChange={(e) => setcompany(e.currentTarget.value)}\n          placeholder=\"Enter a Company Name\"\n          style={{\n            outlineColor: backendErrors?.errors?.company ? \"red\" : null,\n            color: backendErrors?.errors?.company ? \"red\" : null,\n          }}\n          className={backendErrors?.errors?.company ? \"Auth-Input\" : null}\n        />\n        <label\n          htmlFor=\"username\"\n          style={{ color: backendErrors?.errors?.username ? \"red\" : null }}\n        >\n          {\" \"}\n          {!backendErrors?.errors?.username\n            ? \"Username\"\n            : backendErrors?.errors?.username}\n        </label>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={(e) => setusername(e.currentTarget.value)}\n          placeholder=\"Pick a username\"\n          style={{\n            outlineColor: backendErrors?.errors?.username ? \"red\" : null,\n            color: backendErrors?.errors?.username ? \"red\" : null,\n          }}\n          className={backendErrors?.errors?.username ? \"Auth-Input\" : null}\n        />\n        <label\n          htmlFor=\"password\"\n          style={{ color: backendErrors?.errors?.password ? \"red\" : null }}\n        >\n          {!backendErrors?.errors?.password\n            ? \"Generate a Password\"\n            : backendErrors?.errors?.password}{\" \"}\n          {clipMessage && <span>{clipMessage}</span>}\n          {password.length > 0 && (\n            <img\n              src=\"https://img.icons8.com/material-outlined/24/000000/copy.png\"\n              alt=\"clipboard\"\n              className=\"Clipboard\"\n              onClick={() => handleClipboard()}\n            />\n          )}\n        </label>\n        <input\n          name=\"password\"\n          value={password}\n          onChange={(e) => setpassword(e.currentTarget.value)}\n          placeholder=\"Generate a Password\"\n          readOnly={true}\n          className=\"Password-Input Darken-Input\"\n        />\n        <label>Choose a Password Strength! {dictionary[strength]} </label>\n        <ul className=\"Emoji-List\">\n          <li\n            onClick={(e) => {\n              setStrength(10);\n              rerollPassword(e, 10);\n            }}\n          >\n            😔\n          </li>\n          <li\n            onClick={(e) => {\n              setStrength(20);\n              rerollPassword(e, 20);\n            }}\n          >\n            😐\n          </li>\n          <li\n            onClick={(e) => {\n              setStrength(30);\n              rerollPassword(e, 30);\n            }}\n          >\n            🙂\n          </li>\n          <li\n            onClick={(e) => {\n              setStrength(40);\n              rerollPassword(e, 40);\n            }}\n          >\n            😀\n          </li>\n        </ul>\n        <button onClick={(e) => rerollPassword(e, strength)}>\n          Generate Random Password\n        </button>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CredentialForm;\n","import React, { useContext, useState, useEffect, Fragment } from \"react\";\nimport { AuthContext } from \"../../context/Contexts\";\nimport \"../../styles/dash.css\";\nimport CredentialForm from \"./newCred\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\n\nconst Dashboard = () => {\n  const [modalOpen, setmodalOpen] = useState(false);\n  const [creds, setCreds] = useState(null);\n  const authGlobal = useContext(AuthContext);\n  // const [sortMethod, setSortMethod] = useState(null);\n  const dictionary = {\n    1: <span style={{ color: \"red\" }}>Weak</span>,\n    2: <span style={{ color: \"#ff7b00\" }}>Good</span>,\n    3: <span style={{ color: \"green\" }}>Strong</span>,\n    4: <span style={{ color: \"#1ac703\" }}>Very Strong</span>,\n  };\n\n  useEffect(() => {\n    const fetchUserCreds = async () => {\n      try {\n        const response = await fetch(`/api/cred/${authGlobal.id}`);\n        const parseResp = await response.json();\n        if (response.ok) {\n          setCreds(parseResp);\n        }\n        console.log(parseResp);\n      } catch (err) {\n        console.error(err.message);\n      }\n    };\n    fetchUserCreds();\n  }, [authGlobal]);\n\n  if (!creds)\n    return (\n      <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n\n  const handleModalKey = (e) => {\n    if (e.key === \"Escape\") {\n      if (!modalOpen) return;\n      setmodalOpen(!modalOpen);\n    }\n  };\n\n  return (\n    <Fragment>\n      {modalOpen && (\n        <CredentialForm\n          modalOpen={modalOpen}\n          setmodalOpen={setmodalOpen}\n          setCreds={setCreds}\n          creds={creds}\n        />\n      )}\n      <div className=\"Dashboard-Container\" onKeyUp={(e) => handleModalKey(e)}>\n        <h4>{authGlobal.username}'s Dashboard</h4>\n        <div className=\"Dashboard-Buttons\">\n          <button\n            className=\"Cred-Button\"\n            onClick={() => setmodalOpen(!modalOpen)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              x=\"0px\"\n              y=\"0px\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              style={{ fill: \"#000000\", margin: \"auto\" }}\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z\"\n              ></path>\n            </svg>\n          </button>\n          {/* <select className=\"Dashboard-Select\">\n            <option selected style={{ textAlign: \"center\" }}>\n              Sort By\n            </option>\n            <option onChange={() => setSortMethod(\"aza\")}>A-Z Ascending</option>\n            <option onChange={() => setSortMethod(\"azd\")}>\n              A-Z Descending\n            </option>\n            <option onChange={() => setSortMethod(\"shl\")}>\n              Strength: High-Low\n            </option>\n            <option onChange={() => setSortMethod(\"slh\")}>\n              Strength: Low-High\n            </option>\n          </select> */}\n        </div>\n        <div className=\"Dashboard-Map\">\n          <div className=\"Dashboard-Title\">\n            <div>\n              <h3>Company Name</h3>\n              <ul className=\"Cred-List\">\n                {creds?.map((cred, i) => (\n                  <li className=\"Cred-List-Input\" key={i}>\n                    {cred.company_name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <h3>Username</h3>\n              <ul className=\"Cred-List\">\n                {creds?.map((cred, i) => (\n                  <li className=\"Cred-List-Input\" key={i}>\n                    {cred.username}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <h3>Your Password</h3>\n              <ul className=\"Cred-List\">\n                {creds?.map((cred, i) => (\n                  <li className=\"Cred-List-Input\" key={i}>\n                    {cred.pw}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <h3>Password Strength</h3>\n              <ul className=\"Cred-List\">\n                {creds?.map((cred, i) => (\n                  <li className=\"Cred-List-Input\" key={i}>\n                    {dictionary[cred.strength]}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <h3>Removed</h3>\n              <ul className=\"Cred-List Class\" style={{ textAlign: \"center\" }}>\n                {creds?.map((cred, i) => {\n                  const removedStatus = cred.removed.toString();\n                  return (\n                    <li className=\"Cred-List-Input\" key={i}>\n                      {removedStatus === \"true\" ? (\n                        <CheckCircleIcon\n                          style={{\n                            color: \"green\",\n                            fontSize: \"small\",\n                            textAlign: \"center\",\n                          }}\n                        />\n                      ) : (\n                        <RadioButtonUncheckedIcon\n                          style={{\n                            color: \"#b90000\",\n                            fontSize: \"small\",\n                            textAlign: \"center\",\n                          }}\n                        />\n                      )}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Dashboard;\n","import React, { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/Contexts\";\n\n// Protected Routes\nexport const PrivateRoute = ({ children, redirectTo }) => {\n  const authGlobal = useContext(AuthContext);\n  return authGlobal.isLoggedIn ? children : <Navigate to={redirectTo} />;\n};\n\n// Login, Signup page\nexport const AuthRoute = ({ children, redirectTo }) => {\n  const authGlobal = useContext(AuthContext);\n  return !authGlobal.isLoggedIn ? children : <Navigate to={redirectTo} />;\n};\n","// Authorization\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\n","import * as ACTION_TYPE from \"../actions/types\";\n\nconst user = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : \"\";\n\nexport const initialState = {\n  isLoggedIn: false || (user ? true : false),\n  username: \"\" || user.username,\n  token: \"\" || user.token,\n  id: \"\" || user.id,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPE.LOGIN:\n      return {\n        isLoggedIn: true,\n        username: action.username,\n        token: action.token,\n        id: action.id,\n      };\n    case ACTION_TYPE.LOGOUT:\n      return {\n        isLoggedIn: false,\n        username: \"\",\n        token: \"\",\n        id: \"\",\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Landing from \"./components/landing/Landing\";\nimport Signup from \"./components/auth/Signup\";\nimport Signin from \"./components/auth/Signin\";\nimport Heading from \"./components/Heading/Heading\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport { AuthContext } from \"./context/Contexts\";\nimport { PrivateRoute, AuthRoute } from \"./util/RouteUtil\";\nimport { AuthReducer, initialState } from \"./store/reducers/authReducer\";\nimport { login, logout } from \"./store/actions/AuthActions\";\n\nfunction App() {\n  const [stateAuthReducer, dispatchAuthReducer] = useReducer(\n    AuthReducer,\n    initialState\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...stateAuthReducer,\n        login: (data) => dispatchAuthReducer(login(data)),\n        logout: () => dispatchAuthReducer(logout()),\n      }}\n    >\n      <BrowserRouter>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <AuthRoute redirectTo=\"/signin\">\n                <Landing />\n              </AuthRoute>\n            }\n          />\n          <Route\n            path=\"/dashboard\"\n            element={\n              <PrivateRoute redirectTo=\"/signin\">\n                <Heading />\n                <Dashboard />\n              </PrivateRoute>\n            }\n          />\n          <Route\n            path=\"/signup\"\n            element={\n              <AuthRoute redirectTo=\"/dashboard\">\n                <Signup />\n              </AuthRoute>\n            }\n          />\n          <Route\n            path=\"/signin\"\n            element={\n              <AuthRoute redirectTo=\"/dashboard\">\n                <Signin />\n              </AuthRoute>\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import * as ACTION_TYPE from \"./types\";\n\nexport const login = (data) => {\n  return {\n    type: ACTION_TYPE.LOGIN,\n    username: data.username,\n    token: data.token,\n    id: data.id,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: ACTION_TYPE.LOGOUT,\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\n// React strictmode wraps everything\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}